<Window x:Class="HCIProjekat.Forme.PodaciPrikaz"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HCIProjekat.Forme"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"

        mc:Ignorable="d"
        Title="Prikaz podataka" Height="590" Width="470"
        MinWidth="470"
        MinHeight="590"
        Loaded="Window_Loaded"
        Icon="../Images/folder.png"
>

    <Window.Resources>
        <!--BUTTON OVERRIDE TEMPLATEA-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#3F3F46"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#555555"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3F3F46"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#007ACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btnDodajZivotinju" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#3F3F46"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="Foreground" Value="#F1F1F1"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                                <Setter Property="Background" Value="#3F3F46"/>
                                <Setter Property="Foreground" Value="#F1F1F1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="#F1F1F1"/>
                                <Setter Property="BorderThickness" Value="1.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--OVDE JE LISTA STILOVA ZA MESSAGEBOX-->
        <Style x:Key="ButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="LightGreen"></Setter>
            <Setter Property="Foreground" Value="DarkGreen"></Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="Button">
            <Setter Property="Background" Value="LightCoral"></Setter>
            <Setter Property="Foreground" Value="DarkRed"></Setter>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="Button">
            <Setter Property="Background" Value="LightYellow"></Setter>
            <Setter Property="Foreground" Value="DarkOrange"></Setter>
        </Style>

        <Style x:Key="MessageBoxStyle1" TargetType="{x:Type xctk:MessageBox}">
            <Setter Property="Background" Value="#FF1E1E1E" />
            <Setter Property="BorderBrush" Value="#FF999999" />
            <Setter Property="CaptionForeground" Value="#FFF1F1F1" />
            <Setter Property="WindowBorderBrush" Value="#FF686868" />
            <Setter Property="WindowBackground" Value="#FF2D2D30" />
            <Setter Property="WindowOpacity" Value="1.0" />
            <Setter Property="Foreground" Value="#FFF1F1F1"/>
            <Setter Property="YesButtonStyle" Value="{StaticResource ButtonStyle1}"></Setter>
            <Setter Property="NoButtonStyle"  Value="{StaticResource ButtonStyle2}"></Setter>
            <Setter Property="CancelButtonStyle" Value="{StaticResource ButtonStyle3}"></Setter>
            <Setter Property="OkButtonStyle"  Value="{StaticResource btnDodajZivotinju}"></Setter>
        </Style>

    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch">
                    </DockPanel>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>

       



            <MenuItem Header="Izmenite">
                <MenuItem Header="Izmenite zivotinju" IsEnabled="{Binding ElementName=TabelaZivotinja, Path=SelectedItems.Count}"
                          Click="MenuItem_ClickIzmeniZ">
                    <MenuItem.Icon>
                        <Image Source="../Images/pawprint.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Izmenite tip" IsEnabled="{Binding ElementName=TabelaTipova, Path=SelectedItems.Count}"
                          Click="MenuItem_ClickIzmeniT">
                    <MenuItem.Icon>
                        <Image Source="../Images/category.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Izmenite etiketu" IsEnabled="{Binding ElementName=TabelaEtiketa, Path=SelectedItems.Count}"
                          Click="MenuItem_ClickIzmeniE">
                    <MenuItem.Icon>
                        <Image Source="../Images/tag.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="Obrisite">
                <MenuItem Header="Obrisite zivotinju"  x:Name="MenuItemObrisiZivotinju" Click="BtnIzbrisiZivotinju_Click"
                      IsEnabled="{Binding ElementName=TabelaZivotinja, Path=SelectedItems.Count}">
                    <MenuItem.Icon>
                        <Image Source="../Images/pawprint.ico"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Obrisite tip"  Click="BtnIzbrisiTip_Click"
                      IsEnabled="{Binding ElementName=TabelaTipova, Path=SelectedItems.Count}">
                    <MenuItem.Icon>
                        <Image Source="../Images/category.png"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="Obrisite etiketu" Click="BtnIzbrisiEtiketu_Click"
                      IsEnabled="{Binding ElementName=TabelaEtiketa, Path=SelectedItems.Count}">
                    <MenuItem.Icon>
                        <Image Source="../Images/tag.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Click="MenuItem_Click" Header="Pomoc" HorizontalAlignment="Right">
            </MenuItem>
        </Menu>

        <Grid DockPanel.Dock="Left"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Margin="105,0,0,0" FontSize="16" HorizontalAlignment="Center" FontWeight="Bold">Tabela zivotinja</TextBlock>
            <TextBlock Grid.Row="0" HorizontalAlignment="Left">Oznaka selektovane:</TextBlock>
            <TextBox  Margin="120,0,0,0" Grid.Row="0" MaxWidth="200" MinWidth="100" HorizontalAlignment="Left" x:Name="OznakaSelektovaneZTextBox"
                      IsEnabled="False"
                     DataContext="{Binding ElementName=TabelaZivotinja, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                     Text="{Binding Path=_oznaka, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            </TextBox>

            <DataGrid x:Name="TabelaZivotinja" Grid.Row="1" ItemsSource="{Binding Path=Pod.listaZivotinja}" IsReadOnly="True" Margin="0,5,5,0" BorderThickness="1,2,2,1" BorderBrush="DarkSlateGray"
                      Visibility="Visible" AlternatingRowBackground="LightGray" AutoGenerateColumns="False"
                      IsSynchronizedWithCurrentItem="True" SelectionChanged="TabelaZivotinja_SelectionChanged">
                <DataGrid.ItemContainerStyle>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseRightButtonDown" Handler="Row_RightClick">
                        </EventSetter>
                    </Style>
                </DataGrid.ItemContainerStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Oznaka" x:Name="OznakaZKolona" Width="*" Binding="{Binding _oznaka}">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Ime" x:Name="imeZKolona" Width="*" Binding="{Binding _ime}">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Tip" x:Name="tipZKOlona" Width="*" Binding="{Binding _tip}">
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            
            <TextBlock Margin="105,0,0,0" Grid.Row="2" FontSize="16" HorizontalAlignment="Center" FontWeight="Bold">Tabela tipova</TextBlock>
            <TextBlock Grid.Row="2" HorizontalAlignment="Left">Oznaka selektovanog:</TextBlock>
            <TextBox  Margin="120,0,0,0" Grid.Row="2" MaxWidth="200" MinWidth="100" HorizontalAlignment="Left" x:Name="OznakaSelektovanogTTextBox"
                      IsEnabled="False"
                     DataContext="{Binding ElementName=TabelaTipova, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                     Text="{Binding Path=_oznaka, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            </TextBox>
            <DataGrid x:Name="TabelaTipova" Grid.Row="3" ItemsSource="{Binding Path=Pod.listaTipova}" IsReadOnly="True"  Margin="0,5,5,0" BorderThickness="1,2,2,1" BorderBrush="DarkSlateGray"
                      Visibility="Visible" AlternatingRowBackground="LightGray" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True">
                <DataGrid.ItemContainerStyle>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseRightButtonDown" Handler="Row_RightClickTip">
                        </EventSetter>
                    </Style>
                </DataGrid.ItemContainerStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Oznaka" x:Name="oznakaTKolona" Width="*" Binding="{Binding _oznaka}">
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Ime" x:Name="imeTKolona" Width="*" Binding="{Binding _ime}">
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <TextBlock Grid.Row="4" Margin="105,0,0,0" FontSize="16" HorizontalAlignment="Center" FontWeight="Bold">Tabela etiketa</TextBlock>
            <TextBlock Grid.Row="4" HorizontalAlignment="Left">Oznaka selektovane:</TextBlock>
            <TextBox  Margin="120,0,0,0" Grid.Row="4" MaxWidth="200" MinWidth="100" HorizontalAlignment="Left" x:Name="OznakaSelektovaneETextBox"
                      IsEnabled="False"
                     DataContext="{Binding ElementName=TabelaEtiketa, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                     Text="{Binding Path=_oznaka, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            </TextBox>

            <DataGrid x:Name="TabelaEtiketa" Grid.Row="5" ItemsSource="{Binding Path=Pod.listaEtiketa}" IsReadOnly="True"  Margin="0,5,5,0" BorderThickness="1,2,2,1" BorderBrush="DarkSlateGray"
                      Visibility="Visible" AlternatingRowBackground="LightGray" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True">
                <DataGrid.ItemContainerStyle>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="MouseRightButtonDown" Handler="Row_RightClickE">
                        </EventSetter>
                    </Style>
                </DataGrid.ItemContainerStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Oznaka" x:Name="oznakaEKolona" Width="*" Binding="{Binding _oznaka}">
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Button Grid.Row="6" HorizontalAlignment="Right" Margin="0,5,25,5"
                    Click="Button_ClickPovratak"
                    MouseLeave="ButtonMouseLeft"
                    MouseEnter="ButtonMouseOver" Style="{DynamicResource btnDodajZivotinju}"
                    >Povratak
            </Button>

        </Grid>

       
    </DockPanel>
</Window>
