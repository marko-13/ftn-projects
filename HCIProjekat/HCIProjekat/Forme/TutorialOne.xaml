<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:HCIProjekat"
        xmlns:val="clr-namespace:HCIProjekat.Forme" 
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"

        
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="HCIProjekat.Forme.TutorialOne" 
        mc:Ignorable="d" 
        
        Title="Tutorijal za dodavanje zivotinje"  Height="472.76" Width="909.521" 
    MinHeight="472" MinWidth="909"
        Left="25" Top="25"
        SourceInitialized="Window_SourceInitialized"
        Icon="../Images/pawprint.ico"
        Background="DimGray"
    Loaded="Window_Loaded">


    <Window.Resources>

        <!--BUTTON OVERRIDE TEMPLATEA-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#3F3F46"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#555555"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3F3F46"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#007ACC"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btnDodajZivotinju" TargetType="{x:Type Button}">




            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="#3F3F46"/>
            <Setter Property="BorderBrush" Value="#555555"/>
            <Setter Property="Foreground" Value="#F1F1F1"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                                <Setter Property="Background" Value="#3F3F46"/>
                                <Setter Property="Foreground" Value="#F1F1F1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Foreground" Value="#F1F1F1"/>
                                <Setter Property="BorderThickness" Value="1.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--OVDE JE LISTA STILOVA ZA MESSAGEBOX-->
        <Style x:Key="ButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="LightGreen"></Setter>
            <Setter Property="Foreground" Value="DarkGreen"></Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="Button">
            <Setter Property="Background" Value="LightCoral"></Setter>
            <Setter Property="Foreground" Value="DarkRed"></Setter>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="Button">
            <Setter Property="Background" Value="LightYellow"></Setter>
            <Setter Property="Foreground" Value="DarkOrange"></Setter>
        </Style>

        <Style x:Key="MessageBoxStyle1" TargetType="{x:Type xctk:MessageBox}">
            <Setter Property="Background" Value="#FF1E1E1E" />
            <Setter Property="BorderBrush" Value="#FF999999" />
            <Setter Property="CaptionForeground" Value="#FFF1F1F1" />
            <Setter Property="WindowBorderBrush" Value="#FF686868" />
            <Setter Property="WindowBackground" Value="#FF2D2D30" />
            <Setter Property="WindowOpacity" Value="1.0" />
            <Setter Property="Foreground" Value="#FFF1F1F1"/>
            <Setter Property="YesButtonStyle" Value="{StaticResource ButtonStyle1}"></Setter>
            <Setter Property="NoButtonStyle"  Value="{StaticResource ButtonStyle2}"></Setter>
            <Setter Property="CancelButtonStyle" Value="{StaticResource ButtonStyle3}"></Setter>
            <Setter Property="OkButtonStyle"  Value="{StaticResource btnDodajZivotinju}"></Setter>
        </Style>


        <!--
        <Style x:Key="ButtonStyle" TargetType="Button">
            RESET ZA NJIHOVE DEFAULT GLUPOSTI
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
                     
        </Style>
        -->

        






        <!--COMBOBOX OVERRIDE TEMPLATEA-->
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#434346"/>
        <!--Ovo je border oko celog comboboxa-->
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#333337"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#3F3F46	" Offset="0.0"/>
            <!--Ovo je za hover gradijent i isto ispod red-->
            <GradientStop Color="#3F3F46	" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#007ACC"/>
        <!--ovo je border kad je mis preko cb-->
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#007ACC	"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#3F3F46"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--Ovde je border i pozadina za cb-->
                        <Border x:Name="templateRoot" BorderBrush="#434346" BorderThickness="{TemplateBinding BorderThickness}" Background="#3F3F46"  SnapsToDevicePixels="true">
                            <!--ovde je border brush za oko glyph i borderthickness sam podesio-->
                            <Border x:Name="splitBorder" BorderBrush="Black" BorderThickness="1,0,0,0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="#656565" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--kad predjes misem stavio sam da glyph bude beo-->
                                <Setter Property="Fill" TargetName="arrow" Value="#FFFFFF"/>
                                <Setter Property="BorderThickness" TargetName="templateRoot" Value="2"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="cbStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>






        <!--OVERRIDE ZA COMBOBOX ITEM-->

        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#3F3F46"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#3F3F46"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#FF293955"/>
        <!--Boja selektovanog kad ga livujes dropdown liste-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF293955"/>
        <!--Boja kad livujes sel bordera-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#FF293955"/>
        <!--Boja onog odabranog kad opet spustis-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#FF444444"/>
        <!--border selektovanog kad se spustis-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#FF465A7D"/>
        <!--Pozadina selektovanog kad leave-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFFFFF"/>
        <!--Border kad livujes odabran-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#007ACC"/>
        <!--Selektovan kad ga livujes-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#3F3F46"/>
        <!--Onaj koji hoverujes-->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#007ACC"/>
        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="#1B1B1C"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <!--STYLE ZA DPTEXTBOX-->
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Text" Value="Izaberite datum*" />
            <Setter Property="Background" Value="#3F3F46" />
            <Setter Property="BorderBrush" Value="Red"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>

        </Style>

        <Style TargetType="DatePicker">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="Izaberite datum*" Foreground="LightGray" Opacity="0.5"/>
                    </VisualBrush.Visual>
                </VisualBrush>

                <VisualBrush x:Key="CueBannerBrushEmpty" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="" Foreground="LightGray" Opacity="0.5"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>


            <Setter Property="BorderBrush" Value="DarkSlateGray"/>
            <Setter Property="IsManipulationEnabled" Value="False"/>


            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>

                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrushEmpty}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--OVERRIDE ZA TEXTBOX TEMPLATE-->
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FF434346"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF3399FF"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF3399FF"/>
        <Style x:Key="tbStyleOznaka" TargetType="{x:Type TextBox}">

            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="Unesite oznaku zivotinje*" Foreground="LightGray"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>

            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="BorderBrush" Value="#FFBEC3CB"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="#007ACC"/>
                                <Setter Property="BorderThickness" Value="2,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}"
                                        />
                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>


                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>

            </Style.Triggers>
        </Style>



        <!--TB IME STYLE-->
        <Style x:Key="tbStyleIme" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="Unesite ime zivotinje*" Foreground="LightGray"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>

            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="BorderBrush" Value="#FFBEC3CB"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="#007ACC"/>
                                <Setter Property="BorderThickness" Value="2,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}"
                                        />
                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>


                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>

            </Style.Triggers>
        </Style>



        <!--TB OPIS STYLE-->
        <Style x:Key="tbStyleOpis" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="Unesite opis zivotinje*" Foreground="LightGray"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>

            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="BorderBrush" Value="#FFBEC3CB"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="#007ACC"/>
                                <Setter Property="BorderThickness" Value="2,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}"
                                        />
                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>


                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>

            </Style.Triggers>
        </Style>



        <!--TB IKONICA STYLE-->
        <Style x:Key="tbStyleIkonica" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="Adresa ikonice*" Foreground="LightGray"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>

            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="BorderBrush" Value="#FFBEC3CB"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.8"/>
                                <Setter Property="BorderBrush" Value="#FFBEC3CB"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="#FFBEC3CB"/>
                                <Setter Property="BorderThickness" Value="1,1,1,1"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="#FFBEC3CB"
                                        />
                                <Setter Property="BorderThickness" Value="1,1,1,1"/>
                                <Setter Property="Background" Value="DimGray"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>


                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>

            </Style.Triggers>
        </Style>

        <!--TB PRIHOD STYLE-->
        <Style x:Key="tbStylePrihod" TargetType="{x:Type TextBox}">
            <Style.Resources>
                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                    <VisualBrush.Visual>
                        <Label   Content="Unesite prihod u $*" Foreground="LightGray"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>

            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="BorderBrush" Value="#FFBEC3CB"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="#007ACC"/>
                                <Setter Property="BorderThickness" Value="2,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border"
                                        Value="{StaticResource TextBox.Focus.Border}"
                                        />
                                <Setter Property="BorderThickness" Value="0,0,0,2"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>


                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Background" Value="White" />
                </Trigger>

            </Style.Triggers>
        </Style>





    </Window.Resources>


    <!--ScrollViewer-->
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>

            



            <MenuItem Click="MenuItem_Click" Header="Pomoc" HorizontalAlignment="Right"/>
        </Menu>

        <!--Viewbox da bi se resizeovali buttons sa promenom velicine ekrana
        
        
        <Viewbox DockPanel.Dock="Bottom">
            <Grid   x:Name="LowerGrid"  DockPanel.Dock="Bottom"  VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="50" MaxHeight="50"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>


                <Nazad na pocetnu dugme
                <Button Grid.Column="1" Grid.Row="1"
                        Margin="50,10,50,10" Height="Auto"  MinWidth="120"
                        Width="Auto" Click="Button_Click" VerticalAlignment="Center"
                        HorizontalAlignment="Center" FontSize="14"
                        
                        MouseLeave="ButtonMouseLeft"
                        MouseEnter="ButtonMouseOver"
                        Style="{DynamicResource btnDodajZivotinju}" Content="Nazad na pocetnu"/>

                Ovo sam dodao da kad povecam font na buttonu da se ne pomeri sve 
                <TextBlock Grid.Column="0" Grid.Row="1" Visibility="Hidden"
                        Margin="50,10,190,10" Height="Auto"  MinWidth="120"
                        Width="Auto" VerticalAlignment="Center"
                        HorizontalAlignment="Center" FontSize="18"><Run Text="Nazad na pocetnu"/></TextBlock>

               

                Dodaj zivotinju dugme
                <Button   Grid.Column="2" Grid.Row="1" Margin="90,10,50,10" Height="Auto"
                            MinWidth="120" Width="Auto" Click="Button_Click_1" HorizontalAlignment="Center"
                            VerticalAlignment="Center" FontSize="14"
                            
                             MouseLeave="ButtonMouseLeft"
                             MouseEnter="ButtonMouseOver" Style="{DynamicResource btnDodajZivotinju}"
                            Content="Dodaj zivotinju"
                            />



            </Grid>
        </Viewbox>
-->
        <Viewbox DockPanel.Dock="Left" VerticalAlignment="Top"  StretchDirection="Both" Stretch="Fill" HorizontalAlignment="Left">
            <Grid DockPanel.Dock="Left" Margin="0,5"  VerticalAlignment="Top" HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition  Height="*"/>
                    <RowDefinition  Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*" MinHeight="37"/>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MaxWidth="180" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Grid.Row="7"  Margin="10,20,0,10" Height="Auto"  MinWidth="100"
                        VerticalAlignment="Center"
                        Click="Button_Click_NextTutorialStep"
                        HorizontalAlignment="Center" FontSize="14"
                        MouseLeave="ButtonMouseLeft"
                        MouseEnter="ButtonMouseOver"
                         Style="{DynamicResource btnDodajZivotinju}">Sledeci korak
                </Button>

                <Button Grid.Column="2" Grid.Row="7"
                        Margin="50,10,-30,5" Height="Auto"  MinWidth="100"
                        Width="Auto" Click="Button_Click" VerticalAlignment="Center"
                        HorizontalAlignment="Center" FontSize="14"
                        
                        MouseLeave="ButtonMouseLeft"
                        MouseEnter="ButtonMouseOver"
                        Style="{DynamicResource btnDodajZivotinju}" Content="Nazad na pocetnu"/>

                <!--Ovo sam dodao da kad povecam font na buttonu da se ne pomeri sve -->
                <TextBlock Grid.Column="2" Grid.Row="7" Visibility="Hidden"
                        Margin="50,15,10,5" Height="Auto"  MinWidth="100" MinHeight="40"
                        Width="Auto" VerticalAlignment="Center"
                        HorizontalAlignment="Center" FontSize="18"><Run Text="Nazad na pocetnu"/></TextBlock>



                <!--Dodaj zivotinju dugme-->
                <Button   Name="dugmeZaDodavanje" Grid.Column="3" Grid.Row="7" Margin="20,10,0,5" Height="Auto"
                            MinWidth="120" Width="Auto" Click="ButtonAddAnimal" HorizontalAlignment="Center"
                            VerticalAlignment="Center" FontSize="14"
                          
                            
                             MouseLeave="ButtonMouseLeft"
                             MouseEnter="ButtonMouseOver" Style="{DynamicResource btnDodajZivotinju}"
                            Content="Dodajte zivotinju"
                            >


                </Button>

                <!--OVDE POCINJE DRUGA POLOVINA STRANE ZA UNOS-->
                <!--LABELE DESNOG DELA STRANICE-->
                <!--labela opasna za ljude-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray"  Grid.Column="2"
                            Grid.Row="0" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="0" 
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Opasna za ljude:"/></TextBlock>
                </Border>

                <!--labela iucn lista-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="2"
                            Grid.Row="1" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="1"
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Na IUCN crvenoj listi:"/></TextBlock>
                </Border>

                <!--labela zivi u naseljenom regionu-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="2"
                            Grid.Row="2" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="2"
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Zivi u naseljenom regionu:"/></TextBlock>
                </Border>

                <!--labela turisticki status-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="2"
                            Grid.Row="3" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="3"
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Tursiticki status:"/></TextBlock>
                </Border>

                <!--labela prihod od turizma-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="2"
                            Grid.Row="4" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="4"
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Prihod od turizma:"/></TextBlock>
                </Border>

                <!--labela datum otkrivanja-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="2"
                            Grid.Row="5" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="5"
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Datum otkrivanja:"/></TextBlock>
                </Border>

                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="2"
                            Grid.Row="6" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="6"
                                HorizontalAlignment="Center" VerticalAlignment="Center"><Run Text="Etiketa:"/></TextBlock>
                </Border>


                <!--POLJA DESNOG DELA STRANICE CB+TB-->
                <!--Combobox OPASNA ZA LJUDE sa hintom-->
                <Grid Grid.Row="0" Grid.Column="3">
                    <ComboBox x:Name="cbOpasna"  Margin="0,5,5,10"
                              Background="White" MinWidth="150"
                              ItemsSource="{Binding OpasnaComboBox}" SelectedValue="{Binding OpasnaComboBoxSelected}"
                              Style="{StaticResource cbStyle}" Foreground="LightGray"
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"/>
                    <TextBlock Text="Da li je opasna*" Foreground="LightGray" Opacity="0.5"
                               Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=cbOpasna}"
                                                         Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <!--Combobox IUCN LISTA sa hintom-->
                <Grid Grid.Row="1" Grid.Column="3">
                    <ComboBox x:Name="cbIUCN"   Margin="0,5,5,10" Background="White"
                              ItemsSource="{Binding IUCNListaComboBox}" SelectedValue="{Binding IUCNComboBoxSelected}"
                              Style="{StaticResource cbStyle}" Foreground="LightGray"
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"/>
                    <TextBlock Text="Da li je na IUCN listi*" Foreground="LightGray" Opacity="0.5"
                                Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=cbIUCN}"
                                                         Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>


                <!--Combobox ZIVI U NASELJENOM sa hintom-->
                <Grid Grid.Row="2" Grid.Column="3">
                    <ComboBox x:Name="cbZiviNaselje" 
                              Margin="0,5,5,10" Background="White"
                              ItemsSource="{Binding ZiviUNaseljuComboBox}" SelectedValue="{Binding NaseljeComboBoxSelected}"
                              Style="{StaticResource cbStyle}" Foreground="LightGray" 
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"/>
                    <TextBlock Text="Da li zivi u naseljenom*" Foreground="LightGray" Opacity="0.5"
                                Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=cbZiviNaselje}"
                                                         Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>


                <!--Combobox TURISTICKI STATUS sa hintom-->
                <Grid Grid.Row="3" Grid.Column="3">
                    <ComboBox x:Name="cbTuristicki"   Margin="0,5,5,10" Background="#3F3F46"  
                              ItemsSource="{Binding TuristickiStatusComboBox}"  SelectedValue="{Binding TuristickiComboBoxSelected}"
                              Style="{StaticResource cbStyle}" Foreground="LightGray"
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"/>

                    <TextBlock Text="Odaberite status*" Foreground="LightGray" Opacity="0.5"
                                       Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left"
                                       VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=cbTuristicki}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>


                <!--TextBox prihod sa hitom-->
                <TextBox  Grid.Column="3" Grid.Row="4" Margin="0,5,5,10" MinWidth="150"  x:Name="tbPrihod"
                                 MaxWidth="310" AcceptsReturn="True" TextWrapping="Wrap"
                          Style="{StaticResource tbStylePrihod}">


                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>

                                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="PrihodTextBox"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}"
                                                   Foreground="#800000"
                                           Margin="0,0,10,0"/>

                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                    <Binding Path="PrihodTextBox" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:PrihodValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <!--Datepicker koji NEradi
                <local:CustomDatePicker  x:Name="dp"  WatermarkText="Izaberite datum*"  Grid.Column="3" Grid.Row="5"
                                            Margin="0,5,5,10" Foreground="LightGray"
                                        Background="#3F3F46">

                    
                </local:CustomDatePicker> -->

                <DatePicker Grid.Column="3" Grid.Row="5" x:Name="datePicker"
                                            Margin="0,5,5,10" Foreground="LightGray"
                                        Background="#3F3F46" Loaded="dp_loaded" FirstDayOfWeek="Monday" SelectedDate="{Binding DatumSelected}" 
                            >
                    <DatePicker.Resources>


                    </DatePicker.Resources>
                </DatePicker>






                <!--OVDE SE ZAVRSAVA DESNA POLOVINA STRANE 
                        DOLE SU POKUSAJI DATEPICKERA KOJI NE RADE-->

                <!--
                        <DatePicker Grid.Column="1" Grid.Row="5"
                                    Margin="0,5,5,5"
                                    SelectedDateFormat="Long"
                                    SelectedDate="{Binding DateTime, StringFormat='dd/MM/yyyy'}" >
                            <DatePicker.Resources>
                                <Style TargetType="{x:Type DatePickerTextBox}">
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBox x:Name="PART_TextBox" 
                                    Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DatePicker.Resources>
                        </DatePicker>
                        -->



                <!--
                        <TextBox Grid.Column="1"
                        Grid.Row="5" Margin="0,3,5,11" MinWidth="170" 
                        MaxWidth="310"     
                         AcceptsReturn="True" TextWrapping="Wrap">
                            Ovaj style tag da bi pisalo sivim hint/uputstvo
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Label Content="Unesite datum dd/mm/yyyy*" Foreground="LightGray"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                        <TextBox.Text >
                            <Binding Path="DatumTextBox" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:OznakaValidationRule ValidationStep="RawProposedValue"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="DatumtextBox"/>
                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                        </TextBox>
                        -->



                <!--LEVI DEO STRANICE LABELE TEXTBOXOVI I COMBOBOXOVI-->
                <!--Oznaka labela-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray"  Grid.Column="0"
                            Grid.Row="0" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Center"
                                VerticalAlignment="Center"><Run Text="Oznaka:"/></TextBlock>
                </Border>

                <!--Ime labela-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="0"
                            Grid.Row="1" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center"
                                VerticalAlignment="Center"><Run Text="Ime:"/></TextBlock>
                </Border>

                <!--Opis labela-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="0"
                            Grid.Row="5" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center"
                                VerticalAlignment="Center"><Run Text="Opis:"/></TextBlock>
                </Border>

                <!--Tip labela-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="0"
                            Grid.Row="3" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="3" HorizontalAlignment="Center"
                                VerticalAlignment="Center"><Run Text="Tip:"/></TextBlock>
                </Border>

                <!--Status ugrozenosti labela-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="0"
                            Grid.Row="4" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="4" HorizontalAlignment="Center"
                                VerticalAlignment="Center"><Run Text="Status ugrozenosti:"/></TextBlock>
                </Border>

                <!--Ikonica labela-->
                <Border BorderThickness="2" BorderBrush="DarkSlateGray" Grid.Column="0"
                            Grid.Row="2" Margin="3,5,3,10">
                    <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center"
                                VerticalAlignment="Center"><Run Text="Ikonica:"/></TextBlock>
                </Border>

                <!--Grid za tb adresa ikonice i button izaberi-->
                <Grid Grid.Column="1" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"/>
                        <ColumnDefinition Width="2*" MaxWidth="30" />
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" Grid.Row="0" Margin="0,5,10,10" MinWidth="110" MaxWidth="120" 
                                x:Name="tbIcon" AcceptsReturn="True" TextWrapping="Wrap" MaxHeight="25"
                             Style="{StaticResource tbStyleIkonica}"
                             IsReadOnly="True" IsEnabled="False"
                              GotFocus="TbIcon_GotFocus" FontSize="9"
                             >
                        <!--Ovaj style tag da bi pisalo sivim hint/uputstvo-->
                        <TextBox.Resources>
                            <Style TargetType="{x:Type ScrollBar}">

                            </Style>
                        </TextBox.Resources>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="tbIcon"/>
                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                        <!--Binding za tb ikonica dole-->
                        <Binding Path="IkonicaTextBox" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <!--<val:OznakaValidationRule ValidationStep="RawProposedValue"/>-->
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>

                    <Border Grid.Column="1" BorderBrush="DarkSlateGray" BorderThickness="2" Margin="0,5,0,8">

                        <Image Grid.Column="1" Name="imgIcon" MaxHeight="24" MaxWidth="24" />
                    </Border>

                    <Button Grid.Column="2" x:Name="izaberiteButton"
                            Grid.Row="0" Margin="10,5,5,10"
                            MaxWidth="150"
                            Click="Button_Click_2" HorizontalAlignment="Left"
                            MouseLeave="ButtonMouseLeft"
                            MouseEnter="ButtonMouseOver" Style="{DynamicResource btnDodajZivotinju}"
                            Content="Izaberite"/>


                    <!--Ovo sam dodao da kad povecam font na buttonu da se ne pomeri sve -->
                    <TextBlock Grid.Column="2" Grid.Row="0" Visibility="Hidden" Margin="10,5,5,10"
                         Height="Auto"  MinWidth="10" MinHeight="5"
                        Width="Auto" VerticalAlignment="Center"
                        HorizontalAlignment="Center" FontSize="18"><Run Text="Izaberite"/></TextBlock>

                    <TextBlock Grid.Column="1"
                            Grid.Row="0" Margin="10,5,5,10" Visibility="Hidden"
                            MaxWidth="150" FontSize="16"><Run Text="Izaberi"/></TextBlock>
                </Grid>

                <!--Tb za oznaku zivotinje-->
                <TextBox Grid.Column="1" x:Name="oznTB"
                                 Grid.Row="0" Margin="0,5,5,10" MinWidth="100" 
                         Style="{StaticResource tbStyleOznaka}" 
                         >
                    <!--Ovaj style tag da bi pisalo sivim hint/uputstvo-->


                    <!--Gotov style textbox-->

                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="#800000"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>

                    <!--Data binding i validacija tb Oznaka-->


                    <Binding Path="OznakaTextBox" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:OznakaValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>

                </TextBox>

                <!--tb za ime zivotinje-->
                <TextBox Grid.Column="1" x:Name="imeTB"
                                 Grid.Row="1" Margin="0,5,5,10" MinWidth="100"
                         Style="{StaticResource tbStyleIme}" >
                    <!--Ovaj style tag da bi pisalo sivim hint/uputstvo-->


                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>

                                <AdornedElementPlaceholder  x:Name="ImetextBox"/>
                                <TextBlock  Text="{Binding [0].ErrorContent}"  Foreground="#800000"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                    <Binding Path="ImeTextBox" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <val:ImeValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <!--tb opis zivotinje-->
                <TextBox Grid.Column="1" Grid.RowSpan="3" x:Name="tbOpis"
                            Grid.Row="5" Margin="0,5,5,10" MinWidth="150" MaxWidth="173"     
                            AcceptsReturn="True" TextWrapping="Wrap" FontSize="10" 
                            Style="{StaticResource tbStyleOpis}">


                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <StackPanel>
                                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="OpistextBox"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding [0].ErrorContent}" Foreground="#800000"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                    <Binding Path="OpisTextBox" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <!-- <val:OznakaValidationRule ValidationStep="RawProposedValue"/>-->
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>



                <!--Combobox za tip sa hintom-->
                <Grid Grid.Row="3" Grid.Column="1">
                    <ComboBox x:Name="cbTip" Margin="0,5,5,10"  ItemsSource="{Binding TipComboBox}" SelectedValue="{Binding TipComboBoxSelected}"
                              Style="{StaticResource cbStyle}" Foreground="LightGray"
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"
                              />
                    <TextBlock Text="Odaberite tip*"
                               Opacity="0.5"  Foreground="LightGray"
                                       Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=cbTip}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <!--Combobox za status sa hintom-->
                <Grid Grid.Row="4" Grid.Column="1">
                    <ComboBox x:Name="cbStatus"  Margin="0,5,5,10"
                                      Background="White"
                                      ItemsSource="{Binding StatusComboBox}" SelectedValue="{Binding StatusComboBoxSelected}"
                                      Style="{StaticResource cbStyle}" Foreground="LightGray"
                                      ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"/>
                    <TextBlock Text="Odaberite status*"
                               Opacity="0.5" Foreground="LightGray"
                                       Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=cbStatus}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

                <!--<ComboBox Grid.Column="1" Grid.Row="4"
                          Margin="0,5,5,5"  ItemsSource="{Binding Path=StatusComboBox}"  
                           />-->



                <Grid Grid.Row="6" Grid.Column="3">
                    <xctk:CheckComboBox x:Name="ccbEtiketa" Margin="0,5,5,10" Background="#3F3F46"
                                               ItemsSource="{Binding EtiketaComboBox}" Foreground="Black" SelectedValue="{Binding EtiketaComboBoxSelected}"
                                        BorderBrush="#434346" 
                                         MouseEnter="ClrPcker_Background_MouseEnter"
                                  MouseLeave="ClrPcker_Background_MouseLeave"/>

                    <!--
                    <ComboBox x:Name="cbEtiketa"   Margin="0,5,5,10" Background="#3F3F46"  
                              ItemsSource="{Binding EtiketaComboBox}" 
                              Style="{StaticResource cbStyle}" Foreground="LightGray"
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}"/> -->

                    <TextBlock Text="Odaberite etiketu*" Foreground="LightGray" Opacity="0.5"
                                       Margin="2,5,5,10" IsHitTestVisible="False" HorizontalAlignment="Left"
                                       VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem, ElementName=ccbEtiketa}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>


            </Grid>


        </Viewbox>

    </DockPanel>
</Window>
